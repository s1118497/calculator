{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam Chan\\\\Desktop\\\\Local Private\\\\Learn\\\\Projects\\\\calculator\\\\src\\\\components\\\\Panel\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Panel() {\n  _s();\n\n  // State 1: Array to store operands, need 2 to start calculation, need only 1 if clear/del\n  const [operandsArr, setOperand] = useState([]); // State 2: Operator to store what operation to do\n  // +: add || -: minus || x: mul || รท: div\n\n  const [operator, setOperator] = useState(\"\"); // State 3: Calcute result when \"=\" is pressed\n\n  let [display, setDisplay] = useState(\"0\"); // State 4: Flag for presence of operands\n\n  let [flags, setFlags] = useState({\n    hasFirst: false,\n    hasSecond: false\n  }); //  callback for operands input, store operands\n\n  const handleInputClick = () => e => {\n    const text = e.target.innerText;\n    const value = parseInt(text); // Condition 1: No operands\n\n    if (operandsArr.length === 0) {\n      setDisplay(text);\n      setOperand([value]);\n    } // Condition 2: One operand\n\n\n    if (operandsArr.length === 1) {\n      // Condition 2.1: no operator\n      if (!operator) {\n        let newText = operandsArr[0] + text;\n        setDisplay(newText);\n        setOperand([parseInt(newText)]);\n      }\n    }\n  }; // callback for operator click\n\n\n  function handleOpClick(type) {\n    setOperator(type);\n    setOperand([operandsArr[0], operandsArr[0]]);\n  } //  callback for \"=\", calculation\n\n\n  function handleEqClick() {\n    const map = {\n      add: () => operandsArr.shift() + operandsArr.shift(),\n      minus: () => operandsArr.shift() - operandsArr.shift(),\n      mul: () => operandsArr.shift() * operandsArr.shift(),\n      div: () => operandsArr.shift() / operandsArr.shift()\n    };\n    let result = map[operator]();\n    setDisplay(result);\n    setOperand([result]);\n    setOperator(\"\");\n  } //  callback for \"AC\", clear all state\n\n\n  function clearAll() {\n    return () => {\n      setOperand([]);\n      setDisplay(\"0\");\n      setOperator(\"\");\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item ac\",\n      onClick: clearAll(),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: () => setOperator(\"del\"),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: () => handleOpClick(\"div\"),\n      children: \"\\xF7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleInputClick(),\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleInputClick(),\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleInputClick(),\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: () => handleOpClick(\"mul\"),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleInputClick(),\n      children: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleInputClick(),\n      children: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleInputClick(),\n      children: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: () => handleOpClick(\"add\"),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleInputClick(),\n      children: \"7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleInputClick(),\n      children: \"8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleInputClick(),\n      children: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: () => handleOpClick(\"minus\"),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleInputClick(),\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item equal\",\n      onClick: () => handleEqClick(),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Panel, \"7Xs53WrA7g65mHs6WnOqCEmwJ7w=\");\n\n_c = Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"names":["React","useState","Panel","operandsArr","setOperand","operator","setOperator","display","setDisplay","flags","setFlags","hasFirst","hasSecond","handleInputClick","e","text","target","innerText","value","parseInt","length","newText","handleOpClick","type","handleEqClick","map","add","shift","minus","mul","div","result","clearAll"],"sources":["C:/Users/Sam Chan/Desktop/Local Private/Learn/Projects/calculator/src/components/Panel/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nexport default function Panel() {\r\n\t// State 1: Array to store operands, need 2 to start calculation, need only 1 if clear/del\r\n\tconst [operandsArr, setOperand] = useState([]);\r\n\r\n\t// State 2: Operator to store what operation to do\r\n\t// +: add || -: minus || x: mul || รท: div\r\n\tconst [operator, setOperator] = useState(\"\");\r\n\r\n\t// State 3: Calcute result when \"=\" is pressed\r\n\tlet [display, setDisplay] = useState(\"0\");\r\n\r\n\t// State 4: Flag for presence of operands\r\n\tlet [flags, setFlags] = useState({ hasFirst: false, hasSecond: false });\r\n\r\n\t//  callback for operands input, store operands\r\n\tconst handleInputClick = () => (e) => {\r\n\t\tconst text = e.target.innerText;\r\n\t\tconst value = parseInt(text);\r\n\t\t// Condition 1: No operands\r\n\t\tif (operandsArr.length === 0) {\r\n\t\t\tsetDisplay(text);\r\n\t\t\tsetOperand([value]);\r\n\t\t}\r\n\t\t// Condition 2: One operand\r\n\t\tif (operandsArr.length === 1) {\r\n\t\t\t// Condition 2.1: no operator\r\n\t\t\tif (!operator) {\r\n\t\t\t\tlet newText = operandsArr[0] + text;\r\n\t\t\t\tsetDisplay(newText);\r\n\t\t\t\tsetOperand([parseInt(newText)]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// callback for operator click\r\n\tfunction handleOpClick(type) {\r\n\t\tsetOperator(type);\r\n\t\tsetOperand([operandsArr[0], operandsArr[0]]);\r\n\t}\r\n\r\n\t//  callback for \"=\", calculation\r\n\tfunction handleEqClick() {\r\n\t\tconst map = {\r\n\t\t\tadd: () => operandsArr.shift() + operandsArr.shift(),\r\n\t\t\tminus: () => operandsArr.shift() - operandsArr.shift(),\r\n\t\t\tmul: () => operandsArr.shift() * operandsArr.shift(),\r\n\t\t\tdiv: () => operandsArr.shift() / operandsArr.shift(),\r\n\t\t};\r\n\t\tlet result = map[operator]();\r\n\t\tsetDisplay(result);\r\n\t\tsetOperand([result]);\r\n\t\tsetOperator(\"\");\r\n\t}\r\n\r\n\t//  callback for \"AC\", clear all state\r\n\tfunction clearAll() {\r\n\t\treturn () => {\r\n\t\t\tsetOperand([]);\r\n\t\t\tsetDisplay(\"0\");\r\n\t\t\tsetOperator(\"\");\r\n\t\t};\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"panel-container\">\r\n\t\t\t<div className=\"result\">{display}</div>\r\n\t\t\t<button className=\"panel-item ac\" onClick={clearAll()}>\r\n\t\t\t\tAC\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={() => setOperator(\"del\")}>\r\n\t\t\t\tDEL\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={() => handleOpClick(\"div\")}>\r\n\t\t\t\tรท\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className=\"panel-item \" onClick={handleInputClick()}>\r\n\t\t\t\t1\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleInputClick()}>\r\n\t\t\t\t2\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleInputClick()}>\r\n\t\t\t\t3\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={() => handleOpClick(\"mul\")}>\r\n\t\t\t\tx\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className=\"panel-item \" onClick={handleInputClick()}>\r\n\t\t\t\t4\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleInputClick()}>\r\n\t\t\t\t5\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleInputClick()}>\r\n\t\t\t\t6\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={() => handleOpClick(\"add\")}>\r\n\t\t\t\t+\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className=\"panel-item \" onClick={handleInputClick()}>\r\n\t\t\t\t7\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleInputClick()}>\r\n\t\t\t\t8\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleInputClick()}>\r\n\t\t\t\t9\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={() => handleOpClick(\"minus\")}>\r\n\t\t\t\t-\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className=\"panel-item \">.</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleInputClick()}>\r\n\t\t\t\t0\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item equal\" onClick={() => handleEqClick()}>\r\n\t\t\t\t=\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}