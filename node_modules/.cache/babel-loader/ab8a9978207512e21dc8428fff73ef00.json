{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam Chan\\\\Desktop\\\\Local Private\\\\Learn\\\\Projects\\\\calculator\\\\src\\\\components\\\\Panel\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Panel() {\n  _s();\n\n  // State 1: Array to store operands, need 2 to start calculation, need only 1 if clear/del\n  const [operandsArr, setOperands] = useState([]); // State 2: Operator to store what operation to do\n  // +: add || -: minus || x: mul || ÷: div\n\n  const [operator, setOperator] = useState(\"\"); // State 3: show current number (result/operand)\n\n  let [display, setDisplay] = useState(\"\"); // State 4: Flags for presence of operands [1st operand, 2nd operand ...]\n\n  let [flags, setFlags] = useState([0, 0]);\n  /* ------------------------------------------------------------------------- */\n  //  callback for operands number input, store operands\n\n  const handleNumClick = () => e => {\n    if (display.length >= 5) return;\n    const text = e.target.innerText; // Condition 1: No operands\n\n    if (operandsArr.length === 0) {\n      if (operator) {\n        setDisplay(text);\n        setOperands([0, text]);\n        setFlags([1, 0]);\n      } else {\n        setDisplay(text);\n        setOperands([text]);\n        setFlags([1, 0]);\n      }\n    } // Condition 2: One operand\n\n\n    if (operandsArr.length === 1) {\n      // Condition 2.1: no operator\n      if (!operator) {\n        let newText = display === \"0\" ? text : display + text;\n        setDisplay(newText);\n        setOperands([newText]);\n      } // Condition 2.2: has operator\n      else {\n        setDisplay(text);\n        setOperands([operandsArr[0], text]);\n        setFlags([1, 1]);\n      }\n    } // Condition 3: Two operands (must have operator)\n\n\n    if (operandsArr.length === 2) {\n      // Condition 3.1: flags[1] = false (only autofill second when operator present)\n      if (!flags[1]) {\n        setDisplay(text);\n        setOperands([operandsArr[0], text]);\n        setFlags([1, 1]);\n      } // Condition 3.2: flags[1] = true (user input second operand)\n      else {\n        let newText = display + text;\n        setDisplay(newText);\n        setOperands([operandsArr[0], newText]);\n      }\n    }\n\n    if (display === \"Infinity\") {\n      setDisplay(text);\n      setOperands([text]);\n      setFlags([1, 0]);\n      setOperator(\"\");\n    }\n  }; // callback for operator click\n\n\n  function handleOpClick(type) {\n    if (!flags[0]) setOperator(type);\n\n    if (flags[0] && !flags[1]) {\n      // if (operandsArr[0] * 1 < 0 && type === \"minus\") setOperator(\"minus\");\n      if (operator) {\n        // only for 負數 \"+\"\n        // for: - 6 + 9\n        if (type === \"add\") {\n          handleEqClick();\n          setOperator(type);\n        }\n      } else {\n        setOperator(type);\n        setOperands([operandsArr[0], operandsArr[0]]);\n      }\n    } // Only support +/-: 4 + 3 -/+ 2\n    // Not support x/÷ : 4 - 3 * 2 = -2, beacuse it needs 3緩存\n\n\n    if (flags[0] && flags[1]) {\n      if (operator) {\n        handleEqClick(\"op\");\n        setOperator(type);\n        setFlags([1, 0]);\n      }\n    }\n  } //  callback for \"=\", calculation\n\n\n  function handleEqClick(op) {\n    // When NO operands / Infinity\n    if (!operandsArr.length || operandsArr.includes(\"Infinity\") || !operator) return;\n    const map = {\n      // string operation supported, but be aware of \"+\" is considered as string concat!\n      add: () => {\n        var _ref;\n\n        return operandsArr.length === 2 ? operandsArr[0] * 1 + ((_ref = operandsArr[1] * 1) !== null && _ref !== void 0 ? _ref : operandsArr[0] * 1) : operandsArr[0] * 1;\n      },\n      minus: () => {\n        var _operandsArr$;\n\n        return operandsArr[0] - ((_operandsArr$ = operandsArr[1]) !== null && _operandsArr$ !== void 0 ? _operandsArr$ : operandsArr[0]);\n      },\n      mul: () => {\n        var _operandsArr$2;\n\n        return operandsArr.length === 2 ? operandsArr[0] * ((_operandsArr$2 = operandsArr[1]) !== null && _operandsArr$2 !== void 0 ? _operandsArr$2 : operandsArr[0]) : 0;\n      },\n      div: () => {\n        var _operandsArr$3;\n\n        let quotient = operandsArr[0] / ((_operandsArr$3 = operandsArr[1]) !== null && _operandsArr$3 !== void 0 ? _operandsArr$3 : operandsArr[0]); // for only exception (0/0):  - > 3 > = > = > NaN\n\n        if (operandsArr.length === 2) {\n          if (isNaN(quotient)) return \"Infinity\";else return quotient;\n        }\n      }\n    };\n    const operation = map[operator];\n\n    if (operation) {\n      let roundResult = operation().toLocaleString(\"en\", {\n        maximumSignificantDigits: 14\n      });\n      let result = roundResult.replace(/,/g, \"\");\n      setDisplay(result);\n      op ? setOperands([result, result]) : setOperands([result, operandsArr[1]]);\n      setFlags([1, 0]);\n    }\n  } //  callback for \"AC\", clear all state\n\n\n  function clearAll() {\n    return () => {\n      setOperands([]);\n      setDisplay(\"\");\n      setOperator(\"\");\n      setFlags([0, 0]);\n    };\n  } // callback for \"del\", backspace display and current operand\n\n\n  function handleDelClick() {\n    return () => {\n      // when no display, just EXIT for performance efficiency\n      if (!display || display === \"Infinity\") return;\n      let updateText = display.slice(0, -1);\n      setDisplay(updateText); // when 1 operands\n\n      if (!flags[1]) {\n        setOperator(\"\"); // (\"\" * 1) => 0 ; parseInt(\"\")=> NaN\n\n        if (updateText) {\n          setOperands([updateText]);\n        } else {\n          setOperands([]);\n          setFlags([0, 0]);\n        }\n      } // when 2 operands\n      else if (updateText) {\n        setOperands([operandsArr[0], updateText]);\n      } else {\n        setOperands([operandsArr[0], operandsArr[0]]);\n        setFlags([1, 0]);\n      }\n    };\n  } // callback for \".\", handle decimal value\n\n\n  function handleDeCiClick() {\n    return () => {\n      if (operandsArr.length === 2) {\n        if (flags[1]) {\n          if (display.includes(\".\")) return;else {\n            let newText = display + \".\";\n            setDisplay(newText);\n            setOperands([operandsArr[0], newText]);\n            setFlags([1, 1]);\n          }\n        } else if (!flags[1]) {\n          let newText = \"0.\";\n          setDisplay(newText);\n          setOperands([operandsArr[0], newText]);\n          setFlags([1, 1]);\n        }\n      }\n\n      if (operandsArr.length <= 1) {\n        if (display.includes(\".\")) return;else {\n          let newText = display ? display + \".\" : \"0.\";\n          setDisplay(newText);\n          setOperands([newText]);\n          setFlags([1, 0]);\n        }\n      }\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: display ? display : \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item ac\",\n      onClick: clearAll(),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleDelClick(),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: () => handleOpClick(\"div\"),\n      children: \"\\xF7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleNumClick(),\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleNumClick(),\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleNumClick(),\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: () => handleOpClick(\"mul\"),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleNumClick(),\n      children: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleNumClick(),\n      children: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleNumClick(),\n      children: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: () => handleOpClick(\"add\"),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleNumClick(),\n      children: \"7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleNumClick(),\n      children: \"8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleNumClick(),\n      children: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: () => handleOpClick(\"minus\"),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleDeCiClick(),\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item \",\n      onClick: handleNumClick(),\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-item equal\",\n      onClick: () => handleEqClick(),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Panel, \"Lf7x1leYeO42jPBhr6HpXYB9jlc=\");\n\n_c = Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"names":["React","useState","Panel","operandsArr","setOperands","operator","setOperator","display","setDisplay","flags","setFlags","handleNumClick","e","length","text","target","innerText","newText","handleOpClick","type","handleEqClick","op","includes","map","add","minus","mul","div","quotient","isNaN","operation","roundResult","toLocaleString","maximumSignificantDigits","result","replace","clearAll","handleDelClick","updateText","slice","handleDeCiClick"],"sources":["C:/Users/Sam Chan/Desktop/Local Private/Learn/Projects/calculator/src/components/Panel/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nexport default function Panel() {\r\n\t// State 1: Array to store operands, need 2 to start calculation, need only 1 if clear/del\r\n\tconst [operandsArr, setOperands] = useState([]);\r\n\r\n\t// State 2: Operator to store what operation to do\r\n\t// +: add || -: minus || x: mul || ÷: div\r\n\tconst [operator, setOperator] = useState(\"\");\r\n\r\n\t// State 3: show current number (result/operand)\r\n\tlet [display, setDisplay] = useState(\"\");\r\n\r\n\t// State 4: Flags for presence of operands [1st operand, 2nd operand ...]\r\n\tlet [flags, setFlags] = useState([0, 0]);\r\n\r\n\t/* ------------------------------------------------------------------------- */\r\n\r\n\t//  callback for operands number input, store operands\r\n\tconst handleNumClick = () => (e) => {\r\n\t\tif (display.length >= 5) return;\r\n\t\tconst text = e.target.innerText;\r\n\t\t// Condition 1: No operands\r\n\t\tif (operandsArr.length === 0) {\r\n\t\t\tif (operator) {\r\n\t\t\t\tsetDisplay(text);\r\n\t\t\t\tsetOperands([0, text]);\r\n\t\t\t\tsetFlags([1, 0]);\r\n\t\t\t} else {\r\n\t\t\t\tsetDisplay(text);\r\n\t\t\t\tsetOperands([text]);\r\n\t\t\t\tsetFlags([1, 0]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Condition 2: One operand\r\n\t\tif (operandsArr.length === 1) {\r\n\t\t\t// Condition 2.1: no operator\r\n\t\t\tif (!operator) {\r\n\t\t\t\tlet newText = display === \"0\" ? text : display + text;\r\n\t\t\t\tsetDisplay(newText);\r\n\t\t\t\tsetOperands([newText]);\r\n\t\t\t}\r\n\t\t\t// Condition 2.2: has operator\r\n\t\t\telse {\r\n\t\t\t\tsetDisplay(text);\r\n\t\t\t\tsetOperands([operandsArr[0], text]);\r\n\t\t\t\tsetFlags([1, 1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Condition 3: Two operands (must have operator)\r\n\t\tif (operandsArr.length === 2) {\r\n\t\t\t// Condition 3.1: flags[1] = false (only autofill second when operator present)\r\n\t\t\tif (!flags[1]) {\r\n\t\t\t\tsetDisplay(text);\r\n\t\t\t\tsetOperands([operandsArr[0], text]);\r\n\t\t\t\tsetFlags([1, 1]);\r\n\t\t\t}\r\n\t\t\t// Condition 3.2: flags[1] = true (user input second operand)\r\n\t\t\telse {\r\n\t\t\t\tlet newText = display + text;\r\n\t\t\t\tsetDisplay(newText);\r\n\t\t\t\tsetOperands([operandsArr[0], newText]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (display === \"Infinity\") {\r\n\t\t\tsetDisplay(text);\r\n\t\t\tsetOperands([text]);\r\n\t\t\tsetFlags([1, 0]);\r\n\t\t\tsetOperator(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\t// callback for operator click\r\n\tfunction handleOpClick(type) {\r\n\t\tif (!flags[0]) setOperator(type);\r\n\t\tif (flags[0] && !flags[1]) {\r\n\t\t\t// if (operandsArr[0] * 1 < 0 && type === \"minus\") setOperator(\"minus\");\r\n\t\t\tif (operator) {\r\n\t\t\t\t// only for 負數 \"+\"\r\n\t\t\t\t// for: - 6 + 9\r\n\t\t\t\tif (type === \"add\") {\r\n\t\t\t\t\thandleEqClick();\r\n\t\t\t\t\tsetOperator(type);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetOperator(type);\r\n\t\t\t\tsetOperands([operandsArr[0], operandsArr[0]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Only support +/-: 4 + 3 -/+ 2\r\n\t\t// Not support x/÷ : 4 - 3 * 2 = -2, beacuse it needs 3緩存\r\n\t\tif (flags[0] && flags[1]) {\r\n\t\t\tif (operator) {\r\n\t\t\t\thandleEqClick(\"op\");\r\n\t\t\t\tsetOperator(type);\r\n\t\t\t\tsetFlags([1, 0]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//  callback for \"=\", calculation\r\n\tfunction handleEqClick(op) {\r\n\t\t// When NO operands / Infinity\r\n\t\tif (!operandsArr.length || operandsArr.includes(\"Infinity\") || !operator) return;\r\n\t\tconst map = {\r\n\t\t\t// string operation supported, but be aware of \"+\" is considered as string concat!\r\n\t\t\tadd: () =>\r\n\t\t\t\toperandsArr.length === 2\r\n\t\t\t\t\t? operandsArr[0] * 1 + (operandsArr[1] * 1 ?? operandsArr[0] * 1)\r\n\t\t\t\t\t: operandsArr[0] * 1,\r\n\t\t\tminus: () => operandsArr[0] - (operandsArr[1] ?? operandsArr[0]),\r\n\t\t\tmul: () =>\r\n\t\t\t\toperandsArr.length === 2 ? operandsArr[0] * (operandsArr[1] ?? operandsArr[0]) : 0,\r\n\t\t\tdiv: () => {\r\n\t\t\t\tlet quotient = operandsArr[0] / (operandsArr[1] ?? operandsArr[0]);\r\n\t\t\t\t// for only exception (0/0):  - > 3 > = > = > NaN\r\n\t\t\t\tif (operandsArr.length === 2) {\r\n\t\t\t\t\tif (isNaN(quotient)) return \"Infinity\";\r\n\t\t\t\t\telse return quotient;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst operation = map[operator];\r\n\t\tif (operation) {\r\n\t\t\tlet roundResult = operation().toLocaleString(\"en\", { maximumSignificantDigits: 14 });\r\n\t\t\tlet result = roundResult.replace(/,/g, \"\");\r\n\t\t\tsetDisplay(result);\r\n\t\t\top ? setOperands([result, result]) : setOperands([result, operandsArr[1]]);\r\n\t\t\tsetFlags([1, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\t//  callback for \"AC\", clear all state\r\n\tfunction clearAll() {\r\n\t\treturn () => {\r\n\t\t\tsetOperands([]);\r\n\t\t\tsetDisplay(\"\");\r\n\t\t\tsetOperator(\"\");\r\n\t\t\tsetFlags([0, 0]);\r\n\t\t};\r\n\t}\r\n\r\n\t// callback for \"del\", backspace display and current operand\r\n\tfunction handleDelClick() {\r\n\t\treturn () => {\r\n\t\t\t// when no display, just EXIT for performance efficiency\r\n\t\t\tif (!display || display === \"Infinity\") return;\r\n\t\t\tlet updateText = display.slice(0, -1);\r\n\t\t\tsetDisplay(updateText);\r\n\t\t\t// when 1 operands\r\n\t\t\tif (!flags[1]) {\r\n\t\t\t\tsetOperator(\"\");\r\n\t\t\t\t// (\"\" * 1) => 0 ; parseInt(\"\")=> NaN\r\n\t\t\t\tif (updateText) {\r\n\t\t\t\t\tsetOperands([updateText]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetOperands([]);\r\n\t\t\t\t\tsetFlags([0, 0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// when 2 operands\r\n\t\t\telse if (updateText) {\r\n\t\t\t\tsetOperands([operandsArr[0], updateText]);\r\n\t\t\t} else {\r\n\t\t\t\tsetOperands([operandsArr[0], operandsArr[0]]);\r\n\t\t\t\tsetFlags([1, 0]);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// callback for \".\", handle decimal value\r\n\tfunction handleDeCiClick() {\r\n\t\treturn () => {\r\n\t\t\tif (operandsArr.length === 2) {\r\n\t\t\t\tif (flags[1]) {\r\n\t\t\t\t\tif (display.includes(\".\")) return;\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet newText = display + \".\";\r\n\t\t\t\t\t\tsetDisplay(newText);\r\n\t\t\t\t\t\tsetOperands([operandsArr[0], newText]);\r\n\t\t\t\t\t\tsetFlags([1, 1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!flags[1]) {\r\n\t\t\t\t\tlet newText = \"0.\";\r\n\t\t\t\t\tsetDisplay(newText);\r\n\t\t\t\t\tsetOperands([operandsArr[0], newText]);\r\n\t\t\t\t\tsetFlags([1, 1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (operandsArr.length <= 1) {\r\n\t\t\t\tif (display.includes(\".\")) return;\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet newText = display ? display + \".\" : \"0.\";\r\n\t\t\t\t\tsetDisplay(newText);\r\n\t\t\t\t\tsetOperands([newText]);\r\n\t\t\t\t\tsetFlags([1, 0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"panel-container\">\r\n\t\t\t<div className=\"result\">{display ? display : \"0\"}</div>\r\n\t\t\t{/* <div className=\"result\">12314323551513516136363</div> */}\r\n\t\t\t<button className=\"panel-item ac\" onClick={clearAll()}>\r\n\t\t\t\tAC\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleDelClick()}>\r\n\t\t\t\tDEL\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={() => handleOpClick(\"div\")}>\r\n\t\t\t\t÷\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className=\"panel-item \" onClick={handleNumClick()}>\r\n\t\t\t\t1\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleNumClick()}>\r\n\t\t\t\t2\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleNumClick()}>\r\n\t\t\t\t3\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={() => handleOpClick(\"mul\")}>\r\n\t\t\t\tx\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className=\"panel-item \" onClick={handleNumClick()}>\r\n\t\t\t\t4\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleNumClick()}>\r\n\t\t\t\t5\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleNumClick()}>\r\n\t\t\t\t6\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={() => handleOpClick(\"add\")}>\r\n\t\t\t\t+\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className=\"panel-item \" onClick={handleNumClick()}>\r\n\t\t\t\t7\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleNumClick()}>\r\n\t\t\t\t8\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleNumClick()}>\r\n\t\t\t\t9\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={() => handleOpClick(\"minus\")}>\r\n\t\t\t\t-\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className=\"panel-item \" onClick={handleDeCiClick()}>\r\n\t\t\t\t.\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item \" onClick={handleNumClick()}>\r\n\t\t\t\t0\r\n\t\t\t</button>\r\n\t\t\t<button className=\"panel-item equal\" onClick={() => handleEqClick()}>\r\n\t\t\t\t=\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAC/B;EACA,MAAM,CAACC,WAAD,EAAcC,WAAd,IAA6BH,QAAQ,CAAC,EAAD,CAA3C,CAF+B,CAI/B;EACA;;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CAN+B,CAQ/B;;EACA,IAAI,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAApC,CAT+B,CAW/B;;EACA,IAAI,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAhC;EAEA;EAEA;;EACA,MAAMU,cAAc,GAAG,MAAOC,CAAD,IAAO;IACnC,IAAIL,OAAO,CAACM,MAAR,IAAkB,CAAtB,EAAyB;IACzB,MAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,SAAtB,CAFmC,CAGnC;;IACA,IAAIb,WAAW,CAACU,MAAZ,KAAuB,CAA3B,EAA8B;MAC7B,IAAIR,QAAJ,EAAc;QACbG,UAAU,CAACM,IAAD,CAAV;QACAV,WAAW,CAAC,CAAC,CAAD,EAAIU,IAAJ,CAAD,CAAX;QACAJ,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;MACA,CAJD,MAIO;QACNF,UAAU,CAACM,IAAD,CAAV;QACAV,WAAW,CAAC,CAACU,IAAD,CAAD,CAAX;QACAJ,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;MACA;IACD,CAdkC,CAenC;;;IACA,IAAIP,WAAW,CAACU,MAAZ,KAAuB,CAA3B,EAA8B;MAC7B;MACA,IAAI,CAACR,QAAL,EAAe;QACd,IAAIY,OAAO,GAAGV,OAAO,KAAK,GAAZ,GAAkBO,IAAlB,GAAyBP,OAAO,GAAGO,IAAjD;QACAN,UAAU,CAACS,OAAD,CAAV;QACAb,WAAW,CAAC,CAACa,OAAD,CAAD,CAAX;MACA,CAJD,CAKA;MALA,KAMK;QACJT,UAAU,CAACM,IAAD,CAAV;QACAV,WAAW,CAAC,CAACD,WAAW,CAAC,CAAD,CAAZ,EAAiBW,IAAjB,CAAD,CAAX;QACAJ,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;MACA;IACD,CA7BkC,CA8BnC;;;IACA,IAAIP,WAAW,CAACU,MAAZ,KAAuB,CAA3B,EAA8B;MAC7B;MACA,IAAI,CAACJ,KAAK,CAAC,CAAD,CAAV,EAAe;QACdD,UAAU,CAACM,IAAD,CAAV;QACAV,WAAW,CAAC,CAACD,WAAW,CAAC,CAAD,CAAZ,EAAiBW,IAAjB,CAAD,CAAX;QACAJ,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;MACA,CAJD,CAKA;MALA,KAMK;QACJ,IAAIO,OAAO,GAAGV,OAAO,GAAGO,IAAxB;QACAN,UAAU,CAACS,OAAD,CAAV;QACAb,WAAW,CAAC,CAACD,WAAW,CAAC,CAAD,CAAZ,EAAiBc,OAAjB,CAAD,CAAX;MACA;IACD;;IACD,IAAIV,OAAO,KAAK,UAAhB,EAA4B;MAC3BC,UAAU,CAACM,IAAD,CAAV;MACAV,WAAW,CAAC,CAACU,IAAD,CAAD,CAAX;MACAJ,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;MACAJ,WAAW,CAAC,EAAD,CAAX;IACA;EACD,CAnDD,CAjB+B,CAsE/B;;;EACA,SAASY,aAAT,CAAuBC,IAAvB,EAA6B;IAC5B,IAAI,CAACV,KAAK,CAAC,CAAD,CAAV,EAAeH,WAAW,CAACa,IAAD,CAAX;;IACf,IAAIV,KAAK,CAAC,CAAD,CAAL,IAAY,CAACA,KAAK,CAAC,CAAD,CAAtB,EAA2B;MAC1B;MACA,IAAIJ,QAAJ,EAAc;QACb;QACA;QACA,IAAIc,IAAI,KAAK,KAAb,EAAoB;UACnBC,aAAa;UACbd,WAAW,CAACa,IAAD,CAAX;QACA;MACD,CAPD,MAOO;QACNb,WAAW,CAACa,IAAD,CAAX;QACAf,WAAW,CAAC,CAACD,WAAW,CAAC,CAAD,CAAZ,EAAiBA,WAAW,CAAC,CAAD,CAA5B,CAAD,CAAX;MACA;IACD,CAf2B,CAgB5B;IACA;;;IACA,IAAIM,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAArB,EAA0B;MACzB,IAAIJ,QAAJ,EAAc;QACbe,aAAa,CAAC,IAAD,CAAb;QACAd,WAAW,CAACa,IAAD,CAAX;QACAT,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;MACA;IACD;EACD,CAhG8B,CAkG/B;;;EACA,SAASU,aAAT,CAAuBC,EAAvB,EAA2B;IAC1B;IACA,IAAI,CAAClB,WAAW,CAACU,MAAb,IAAuBV,WAAW,CAACmB,QAAZ,CAAqB,UAArB,CAAvB,IAA2D,CAACjB,QAAhE,EAA0E;IAC1E,MAAMkB,GAAG,GAAG;MACX;MACAC,GAAG,EAAE;QAAA;;QAAA,OACJrB,WAAW,CAACU,MAAZ,KAAuB,CAAvB,GACGV,WAAW,CAAC,CAAD,CAAX,GAAiB,CAAjB,YAAsBA,WAAW,CAAC,CAAD,CAAX,GAAiB,CAAvC,uCAA4CA,WAAW,CAAC,CAAD,CAAX,GAAiB,CAA7D,CADH,GAEGA,WAAW,CAAC,CAAD,CAAX,GAAiB,CAHhB;MAAA,CAFM;MAMXsB,KAAK,EAAE;QAAA;;QAAA,OAAMtB,WAAW,CAAC,CAAD,CAAX,qBAAkBA,WAAW,CAAC,CAAD,CAA7B,yDAAoCA,WAAW,CAAC,CAAD,CAA/C,CAAN;MAAA,CANI;MAOXuB,GAAG,EAAE;QAAA;;QAAA,OACJvB,WAAW,CAACU,MAAZ,KAAuB,CAAvB,GAA2BV,WAAW,CAAC,CAAD,CAAX,sBAAkBA,WAAW,CAAC,CAAD,CAA7B,2DAAoCA,WAAW,CAAC,CAAD,CAA/C,CAA3B,GAAiF,CAD7E;MAAA,CAPM;MASXwB,GAAG,EAAE,MAAM;QAAA;;QACV,IAAIC,QAAQ,GAAGzB,WAAW,CAAC,CAAD,CAAX,sBAAkBA,WAAW,CAAC,CAAD,CAA7B,2DAAoCA,WAAW,CAAC,CAAD,CAA/C,CAAf,CADU,CAEV;;QACA,IAAIA,WAAW,CAACU,MAAZ,KAAuB,CAA3B,EAA8B;UAC7B,IAAIgB,KAAK,CAACD,QAAD,CAAT,EAAqB,OAAO,UAAP,CAArB,KACK,OAAOA,QAAP;QACL;MACD;IAhBU,CAAZ;IAkBA,MAAME,SAAS,GAAGP,GAAG,CAAClB,QAAD,CAArB;;IACA,IAAIyB,SAAJ,EAAe;MACd,IAAIC,WAAW,GAAGD,SAAS,GAAGE,cAAZ,CAA2B,IAA3B,EAAiC;QAAEC,wBAAwB,EAAE;MAA5B,CAAjC,CAAlB;MACA,IAAIC,MAAM,GAAGH,WAAW,CAACI,OAAZ,CAAoB,IAApB,EAA0B,EAA1B,CAAb;MACA3B,UAAU,CAAC0B,MAAD,CAAV;MACAb,EAAE,GAAGjB,WAAW,CAAC,CAAC8B,MAAD,EAASA,MAAT,CAAD,CAAd,GAAmC9B,WAAW,CAAC,CAAC8B,MAAD,EAAS/B,WAAW,CAAC,CAAD,CAApB,CAAD,CAAhD;MACAO,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;IACA;EACD,CAhI8B,CAkI/B;;;EACA,SAAS0B,QAAT,GAAoB;IACnB,OAAO,MAAM;MACZhC,WAAW,CAAC,EAAD,CAAX;MACAI,UAAU,CAAC,EAAD,CAAV;MACAF,WAAW,CAAC,EAAD,CAAX;MACAI,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;IACA,CALD;EAMA,CA1I8B,CA4I/B;;;EACA,SAAS2B,cAAT,GAA0B;IACzB,OAAO,MAAM;MACZ;MACA,IAAI,CAAC9B,OAAD,IAAYA,OAAO,KAAK,UAA5B,EAAwC;MACxC,IAAI+B,UAAU,GAAG/B,OAAO,CAACgC,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAjB;MACA/B,UAAU,CAAC8B,UAAD,CAAV,CAJY,CAKZ;;MACA,IAAI,CAAC7B,KAAK,CAAC,CAAD,CAAV,EAAe;QACdH,WAAW,CAAC,EAAD,CAAX,CADc,CAEd;;QACA,IAAIgC,UAAJ,EAAgB;UACflC,WAAW,CAAC,CAACkC,UAAD,CAAD,CAAX;QACA,CAFD,MAEO;UACNlC,WAAW,CAAC,EAAD,CAAX;UACAM,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;QACA;MACD,CATD,CAUA;MAVA,KAWK,IAAI4B,UAAJ,EAAgB;QACpBlC,WAAW,CAAC,CAACD,WAAW,CAAC,CAAD,CAAZ,EAAiBmC,UAAjB,CAAD,CAAX;MACA,CAFI,MAEE;QACNlC,WAAW,CAAC,CAACD,WAAW,CAAC,CAAD,CAAZ,EAAiBA,WAAW,CAAC,CAAD,CAA5B,CAAD,CAAX;QACAO,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;MACA;IACD,CAvBD;EAwBA,CAtK8B,CAwK/B;;;EACA,SAAS8B,eAAT,GAA2B;IAC1B,OAAO,MAAM;MACZ,IAAIrC,WAAW,CAACU,MAAZ,KAAuB,CAA3B,EAA8B;QAC7B,IAAIJ,KAAK,CAAC,CAAD,CAAT,EAAc;UACb,IAAIF,OAAO,CAACe,QAAR,CAAiB,GAAjB,CAAJ,EAA2B,OAA3B,KACK;YACJ,IAAIL,OAAO,GAAGV,OAAO,GAAG,GAAxB;YACAC,UAAU,CAACS,OAAD,CAAV;YACAb,WAAW,CAAC,CAACD,WAAW,CAAC,CAAD,CAAZ,EAAiBc,OAAjB,CAAD,CAAX;YACAP,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;UACA;QACD,CARD,MAQO,IAAI,CAACD,KAAK,CAAC,CAAD,CAAV,EAAe;UACrB,IAAIQ,OAAO,GAAG,IAAd;UACAT,UAAU,CAACS,OAAD,CAAV;UACAb,WAAW,CAAC,CAACD,WAAW,CAAC,CAAD,CAAZ,EAAiBc,OAAjB,CAAD,CAAX;UACAP,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;QACA;MACD;;MAED,IAAIP,WAAW,CAACU,MAAZ,IAAsB,CAA1B,EAA6B;QAC5B,IAAIN,OAAO,CAACe,QAAR,CAAiB,GAAjB,CAAJ,EAA2B,OAA3B,KACK;UACJ,IAAIL,OAAO,GAAGV,OAAO,GAAGA,OAAO,GAAG,GAAb,GAAmB,IAAxC;UACAC,UAAU,CAACS,OAAD,CAAV;UACAb,WAAW,CAAC,CAACa,OAAD,CAAD,CAAX;UACAP,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAR;QACA;MACD;IACD,CA3BD;EA4BA;;EAED,oBACC;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACC;MAAK,SAAS,EAAC,QAAf;MAAA,UAAyBH,OAAO,GAAGA,OAAH,GAAa;IAA7C;MAAA;MAAA;MAAA;IAAA,QADD,eAGC;MAAQ,SAAS,EAAC,eAAlB;MAAkC,OAAO,EAAE6B,QAAQ,EAAnD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHD,eAMC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEC,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAND,eASC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAE,MAAMnB,aAAa,CAAC,KAAD,CAA5D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATD,eAaC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEP,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAbD,eAgBC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEA,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBD,eAmBC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEA,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBD,eAsBC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAE,MAAMO,aAAa,CAAC,KAAD,CAA5D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBD,eA0BC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEP,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA1BD,eA6BC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEA,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA7BD,eAgCC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEA,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhCD,eAmCC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAE,MAAMO,aAAa,CAAC,KAAD,CAA5D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnCD,eAuCC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEP,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAvCD,eA0CC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEA,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA1CD,eA6CC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEA,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA7CD,eAgDC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAE,MAAMO,aAAa,CAAC,OAAD,CAA5D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhDD,eAoDC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAEsB,eAAe,EAAxD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApDD,eAuDC;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAE7B,cAAc,EAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAvDD,eA0DC;MAAQ,SAAS,EAAC,kBAAlB;MAAqC,OAAO,EAAE,MAAMS,aAAa,EAAjE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA1DD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAgEA;;GAxQuBlB,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}